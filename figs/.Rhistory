Gubar_i <- G(1, tau_j_star, a_i, sigma, alpha, L)
Gubar_j <- G(1, tau_i_star, a_j, sigma, alpha, L)
Gtilde <- function(tau_i, tau_j, Gbar_i, Gbar_j, Gubar_i, Gubar_j, rho, cj_diff, c_i) {
A <- (1 - ((1-rho)*Gbar_j + rho*Gubar_j - G(tau_j, tau_i, a_j, sigma, alpha, L)) / cj_diff) * G(tau_i, tau_j, a_i, sigma, alpha, L)
B <- (((1-rho)*Gbar_j + rho*Gubar_j - G(tau_j, tau_i, a_j, sigma, alpha, L)) / cj_diff) * (rho*Gbar_i + (1-rho)*Gubar_i - c_i)
return(A + B)
}
Gtilde(tau_i_vec, 1, Gbar_i, Gbar_j, Gubar_i, Gubar_j, rho, cj_diff, c_i)
tau_i_vec <- seq(1, 3, .05)
G(tau_i_vec, 1, a_i, sigma, alpha, L)
tau_i_star <- optim(par=1, fn=G, tau_j=1, a=a_i, sigma=sigma, alpha=alpha, L=L,  lower=1, upper=10, method="Brent",
control=list(fnscale=-1))$par
tau_j_star <- optim(par=1, fn=G, tau_j=1, a=a_j, sigma=sigma, alpha=alpha, L=L,  lower=1, upper=10, method="Brent",
control=list(fnscale=-1))$par
Gbar_i <- G(tau_i_star, 1, a_i, sigma, alpha, L)
Gbar_j <- G(tau_j_star, 1, a_j, sigma, alpha, L)
Gubar_i <- G(1, tau_j_star, a_i, sigma, alpha, L)
Gubar_j <- G(1, tau_i_star, a_j, sigma, alpha, L)
Gtilde <- function(tau_i, tau_j, Gbar_i, Gbar_j, Gubar_i, Gubar_j, rho, cj_diff, c_i) {
A <- (1 - ((1-rho)*Gbar_j + rho*Gubar_j - G(tau_j, tau_i, a_j, sigma, alpha, L)) / cj_diff) * G(tau_i, tau_j, a_i, sigma, alpha, L)
B <- (((1-rho)*Gbar_j + rho*Gubar_j - G(tau_j, tau_i, a_j, sigma, alpha, L)) / cj_diff) * (rho*Gbar_i + (1-rho)*Gubar_i - c_i)
return(A + B)
}
Gtilde(tau_i_vec, 1, Gbar_i, Gbar_j, Gubar_i, Gubar_j, rho, cj_diff, c_i)
gtilde <- Gtilde(tau_i_vec, 1, Gbar_i, Gbar_j, Gubar_i, Gubar_j, rho, cj_diff, c_i)
data <- data.frame(tau_i_vec, gtilde)
data
ggplot(data=data, aes(x=tau_i_vec, y=gtilde))
library(tidyverse)
ggplot(data=data, aes(x=tau_i_vec, y=gtilde)) +
geom_line() +
theme_classic()
source("source.R")
source("params.R")
library(tidyverse)
a_i <- 1
a_j <- 1
a_i2 <- 2
a_j2 <- 2
sigma <- 4
alpha <- .5
L <- 1
cj_diff <- .1
rho <- .5
c_i <- .01
tau_i_vec <- seq(1, 3, .05)
G(tau_i_vec, 1, a_i, sigma, alpha, L)
tau_i_star <- optim(par=1, fn=G, tau_j=1, a=a_i, sigma=sigma, alpha=alpha, L=L,  lower=1, upper=10, method="Brent",
control=list(fnscale=-1))$par
tau_j_star <- optim(par=1, fn=G, tau_j=1, a=a_j, sigma=sigma, alpha=alpha, L=L,  lower=1, upper=10, method="Brent",
control=list(fnscale=-1))$par
Gbar_i1 <- G(tau_i_star, 1, a_i, sigma, alpha, L)
Gbar_j1 <- G(tau_j_star, 1, a_j, sigma, alpha, L)
Gubar_i1 <- G(1, tau_j_star, a_i, sigma, alpha, L)
Gubar_j1 <- G(1, tau_i_star, a_j, sigma, alpha, L)
Gbar_i2 <- G(tau_i_star, 1, a_i2, sigma, alpha, L)
Gbar_j2 <- G(tau_j_star, 1, a_j2, sigma, alpha, L)
Gubar_i2 <- G(1, tau_j_star, a_i2, sigma, alpha, L)
Gubar_j2 <- G(1, tau_i_star, a_j2, sigma, alpha, L)
Gtilde <- function(tau_i, tau_j, Gbar_i, Gbar_j, Gubar_i, Gubar_j, rho, cj_diff, c_i, a_i, a_j) {
A <- (1 - ((1-rho)*Gbar_j + rho*Gubar_j - G(tau_j, tau_i, a_j, sigma, alpha, L)) / cj_diff) * G(tau_i, tau_j, a_i, sigma, alpha, L)
B <- (((1-rho)*Gbar_j + rho*Gubar_j - G(tau_j, tau_i, a_j, sigma, alpha, L)) / cj_diff) * (rho*Gbar_i + (1-rho)*Gubar_i - c_i)
return(A + B)
}
gtilde1 <- Gtilde(tau_i_vec, 1, Gbar_i1, Gbar_j1, Gubar_i1, Gubar_j1, rho, cj_diff, c_i, a_i, a_j)
gtilde2 <- Gtilde(tau_i_vec, 1, Gbar_i2, Gbar_j2, Gubar_i2, Gubar_j2, rho, cj_diff, c_i, a_i2, a_j2)
gtilde2
data <- data.frame(tau_i_vec, gtilde1, gtilde2)
ggplot(data=data, aes(x=tau_i_vec, y=gtilde)) +
geom_line() +
theme_classic()
ggplot(data=data, aes(x=tau_i_vec, y=gtilde1)) +
geom_line() +
geom_line(x=tau_i_vec, y=gtilde2)
source("source.R")
source("params.R")
library(tidyverse)
a_i <- 1
a_j <- 1
a_i2 <- 2
a_j2 <- 2
sigma <- 4
alpha <- .5
L <- 1
cj_diff <- .1
rho <- .5
c_i <- .01
tau_i_vec <- seq(1, 3, .05)
G(tau_i_vec, 1, a_i, sigma, alpha, L)
tau_i_star <- optim(par=1, fn=G, tau_j=1, a=a_i, sigma=sigma, alpha=alpha, L=L,  lower=1, upper=10, method="Brent",
control=list(fnscale=-1))$par
tau_j_star <- optim(par=1, fn=G, tau_j=1, a=a_j, sigma=sigma, alpha=alpha, L=L,  lower=1, upper=10, method="Brent",
control=list(fnscale=-1))$par
Gbar_i1 <- G(tau_i_star, 1, a_i, sigma, alpha, L)
Gbar_j1 <- G(tau_j_star, 1, a_j, sigma, alpha, L)
Gubar_i1 <- G(1, tau_j_star, a_i, sigma, alpha, L)
Gubar_j1 <- G(1, tau_i_star, a_j, sigma, alpha, L)
Gbar_i2 <- G(tau_i_star, 1, a_i2, sigma, alpha, L)
Gbar_j2 <- G(tau_j_star, 1, a_j2, sigma, alpha, L)
Gubar_i2 <- G(1, tau_j_star, a_i2, sigma, alpha, L)
Gubar_j2 <- G(1, tau_i_star, a_j2, sigma, alpha, L)
Gtilde <- function(tau_i, tau_j, Gbar_i, Gbar_j, Gubar_i, Gubar_j, rho, cj_diff, c_i, a_i, a_j) {
A <- (1 - ((1-rho)*Gbar_j + rho*Gubar_j - G(tau_j, tau_i, a_j, sigma, alpha, L)) / cj_diff) * G(tau_i, tau_j, a_i, sigma, alpha, L)
B <- (((1-rho)*Gbar_j + rho*Gubar_j - G(tau_j, tau_i, a_j, sigma, alpha, L)) / cj_diff) * (rho*Gbar_i + (1-rho)*Gubar_i - c_i)
return(A + B)
}
gtilde1 <- Gtilde(tau_i_vec, 1, Gbar_i1, Gbar_j1, Gubar_i1, Gubar_j1, rho, cj_diff, c_i, a_i, a_j)
gtilde2 <- Gtilde(tau_i_vec, 1, Gbar_i2, Gbar_j2, Gubar_i2, Gubar_j2, rho, cj_diff, c_i, a_i2, a_j2)
data <- data.frame(tau_i_vec, gtilde1, gtilde2)
ggplot(data=data, aes(x=tau_i_vec, y=gtilde1)) +
geom_line() +
geom_line(x=tau_i_vec, y=gtilde2) +
theme_classic()
gtilde2
tau_i_vec
ggplot(data=data, aes(x=tau_i_vec, y=gtilde1)) +
geom_line() +
geom_line(aes(x=tau_i_vec, y=gtilde2)) +
theme_classic()
optim(par=1, fn=Gtilde, tau_j=1, Gbar_i=Gbar_i1, Gbar_j=Gbar_j1, Gubar_i=Gubar_i1, Gubar_j=Gubar_j1,
rho=rho, cj_diff=cj_diff, c_i=c_i, a_i=a_i, a_j=a_j,  lower=1, upper=10, method="Brent",
control=list(fnscale=-1))$par
optim(par=1, fn=Gtilde, tau_j=1, Gbar_i=Gbar_i2, Gbar_j=Gbar_j2, Gubar_i=Gubar_i2, Gubar_j=Gubar_j2,
rho=rho, cj_diff=cj_diff, c_i=c_i, a_i=a_i2, a_j=a_j2,  lower=1, upper=10, method="Brent",
control=list(fnscale=-1))$par
library(tidyverse)
library(latex2exp)
path <- getwd() %>% strsplit("/")
lastPath <- path[[1]][length(path[[1]])]
if (lastPath == "figs") {
source("source.R")
source("params.R")
}
a1 <- a2 <- 0
tauStar1 <- optim(par=1, fn=G, tau_j=1, a=a1, sigma=sigma, n=n, alpha=alpha, L=L, method="Brent", lower=1, upper=100, control=list(fnscale=-1))$par
tauStar2 <- optim(par=1, fn=G, tau_j=1, a=a2, sigma=sigma, n=n, alpha=alpha, L=L, method="Brent", lower=1, upper=100, control=list(fnscale=-1))$par
pareto <- function(taus, a1, a2, sigma, n, alpha, L, lambda) {
return(-1*(lambda * G(taus[1], taus[2], a1, sigma, alpha, L) + (1 - lambda) * G(taus[2], taus[1], a2, sigma, alpha, L)))
}
library(tidyverse)
library(latex2exp)
path <- getwd() %>% strsplit("/")
lastPath <- path[[1]][length(path[[1]])]
if (lastPath == "figs") {
source("source.R")
source("params.R")
}
a1 <- a2 <- 0
tauStar1 <- optim(par=1, fn=G, tau_j=1, a=a1, sigma=sigma, alpha=alpha, L=L, method="Brent", lower=1, upper=100, control=list(fnscale=-1))$par
tauStar2 <- optim(par=1, fn=G, tau_j=1, a=a2, sigma=sigma, alpha=alpha, L=L, method="Brent", lower=1, upper=100, control=list(fnscale=-1))$par
pareto <- function(taus, a1, a2, sigma, n, alpha, L, lambda) {
return(-1*(lambda * G(taus[1], taus[2], a1, sigma, alpha, L) + (1 - lambda) * G(taus[2], taus[1], a2, sigma, alpha, L)))
}
pFrontier1 <- c()
pFrontier2 <- c()
lambdaV <- seq(0, 1, .01)
for (i in lambdaV) {
O <- optim(par=c(1,1), fn=pareto, a1=a1, a2=a2, sigma=sigma, alpha=alpha, L=L, lambda=i, lower=c(1,1), method="L-BFGS-B")
pFrontier1 <- c(pFrontier1, O$par[1])
pFrontier2 <- c(pFrontier2, O$par[2])
}
pFrontier1
pFrontier2
# indifference curves from trade war
iso <- function(tau_i, tau_j, a, sigma, n, alpha, L, tauStar_i, tauStar_j) {
return(abs(G(tau_i, tau_j, a, sigma, n, alpha, L) - G(tauStar_i, tauStar_j, a, sigma, n, alpha, L)))
}
G(tauStar1, tauStar2, a1, sigma, n, alpha, L)
iso1 <- c()
iso2 <- c()
for (i in pFrontier2) {
O <- optim(par=1, fn=iso, tau_j=i, a=a1, sigma=sigma, n=n, alpha=alpha, L=L, tauStar_i=tauStar1, tauStar_j=tauStar2, lower=1, upper=tauStar1, method="Brent")
iso1 <- c(iso1, O$par)
}
for (i in pFrontier1) {
O <- optim(par=1, fn=iso, tau_j=i, a=a2, sigma=sigma, n=n, alpha=alpha, L=L, tauStar_i=tauStar2, tauStar_j=tauStar1, lower=1, upper=tauStar2, method="Brent")
iso2 <- c(iso2, O$par)
}
pfData <- data.frame(pFrontier1, pFrontier2, iso1, iso2)
barPlot <- ggplot(pfData, aes(x=pFrontier1, y=pFrontier2)) +
geom_line(size=1.5) +
# geom_line(y=iso2, lty=2) +
# geom_line(aes(x=iso1, y=pFrontier2), lty=2) +
annotate("text", x=pFrontier1[length(pFrontier1)/2] + .1, y=pFrontier2[length(pFrontier2)/2],
label=TeX("$\\lambda G_i + (1 - \\lambda) G_j$"), family="Palatino", size=5) +
annotate("text", x=pFrontier1[length(pFrontier1)] - .04, y=pFrontier2[length(pFrontier2)] + .025,
label=TeX("$\\lambda = 1$"), family="Palatino", size=5) +
annotate("text", x=pFrontier1[1] + .04, y=pFrontier2[1] - .025,
label=TeX("$\\lambda = 0$"), family="Palatino", size=5) +
geom_vline(xintercept=max(pFrontier1), size=1) +
geom_hline(yintercept=max(pFrontier2), size=1) +
scale_x_continuous(expand = c(0, 0), breaks=c(1, tauStar1), labels=c(1, TeX("$\\tau_i^{*}(a_i)$"))) +
scale_y_continuous(expand = c(0, 0), breaks=c(1, tauStar2), labels=c(1, TeX("$\\tau_j^{*}(a_j)$"))) +
theme_classic() +
theme(text=element_text(family="Palatino"), axis.text=element_text(size=12),
axis.ticks=element_blank(), axis.title=element_blank(),
plot.margin=unit(c(.5,.5,.5,.5), "cm"), aspect.ratio=1) +
labs(title="Bargaining Space")
library(tidyverse)
library(latex2exp)
path <- getwd() %>% strsplit("/")
lastPath <- path[[1]][length(path[[1]])]
if (lastPath == "figs") {
source("source.R")
source("params.R")
}
a1 <- a2 <- 0
tauStar1 <- optim(par=1, fn=G, tau_j=1, a=a1, sigma=sigma, alpha=alpha, L=L, method="Brent", lower=1, upper=100, control=list(fnscale=-1))$par
tauStar2 <- optim(par=1, fn=G, tau_j=1, a=a2, sigma=sigma, alpha=alpha, L=L, method="Brent", lower=1, upper=100, control=list(fnscale=-1))$par
pareto <- function(taus, a1, a2, sigma, n, alpha, L, lambda) {
return(-1*(lambda * G(taus[1], taus[2], a1, sigma, alpha, L) + (1 - lambda) * G(taus[2], taus[1], a2, sigma, alpha, L)))
}
pFrontier1 <- c()
pFrontier2 <- c()
lambdaV <- seq(0, 1, .01)
for (i in lambdaV) {
O <- optim(par=c(1,1), fn=pareto, a1=a1, a2=a2, sigma=sigma, alpha=alpha, L=L, lambda=i, lower=c(1,1), method="L-BFGS-B")
pFrontier1 <- c(pFrontier1, O$par[1])
pFrontier2 <- c(pFrontier2, O$par[2])
}
# indifference curves from trade war
iso <- function(tau_i, tau_j, a, sigma, n, alpha, L, tauStar_i, tauStar_j) {
return(abs(G(tau_i, tau_j, a, sigma, n, alpha, L) - G(tauStar_i, tauStar_j, a, sigma, n, alpha, L)))
}
G(tauStar1, tauStar2, a1, sigma, alpha, L)
iso1 <- c()
iso2 <- c()
for (i in pFrontier2) {
O <- optim(par=1, fn=iso, tau_j=i, a=a1, sigma=sigma, alpha=alpha, L=L, tauStar_i=tauStar1, tauStar_j=tauStar2, lower=1, upper=tauStar1, method="Brent")
iso1 <- c(iso1, O$par)
}
for (i in pFrontier1) {
O <- optim(par=1, fn=iso, tau_j=i, a=a2, sigma=sigma, alpha=alpha, L=L, tauStar_i=tauStar2, tauStar_j=tauStar1, lower=1, upper=tauStar2, method="Brent")
iso2 <- c(iso2, O$par)
}
pfData <- data.frame(pFrontier1, pFrontier2, iso1, iso2)
barPlot <- ggplot(pfData, aes(x=pFrontier1, y=pFrontier2)) +
geom_line(size=1.5) +
# geom_line(y=iso2, lty=2) +
# geom_line(aes(x=iso1, y=pFrontier2), lty=2) +
annotate("text", x=pFrontier1[length(pFrontier1)/2] + .1, y=pFrontier2[length(pFrontier2)/2],
label=TeX("$\\lambda G_i + (1 - \\lambda) G_j$"), family="Palatino", size=5) +
annotate("text", x=pFrontier1[length(pFrontier1)] - .04, y=pFrontier2[length(pFrontier2)] + .025,
label=TeX("$\\lambda = 1$"), family="Palatino", size=5) +
annotate("text", x=pFrontier1[1] + .04, y=pFrontier2[1] - .025,
label=TeX("$\\lambda = 0$"), family="Palatino", size=5) +
geom_vline(xintercept=max(pFrontier1), size=1) +
geom_hline(yintercept=max(pFrontier2), size=1) +
scale_x_continuous(expand = c(0, 0), breaks=c(1, tauStar1), labels=c(1, TeX("$\\tau_i^{*}(a_i)$"))) +
scale_y_continuous(expand = c(0, 0), breaks=c(1, tauStar2), labels=c(1, TeX("$\\tau_j^{*}(a_j)$"))) +
theme_classic() +
theme(text=element_text(family="Palatino"), axis.text=element_text(size=12),
axis.ticks=element_blank(), axis.title=element_blank(),
plot.margin=unit(c(.5,.5,.5,.5), "cm"), aspect.ratio=1) +
labs(title="Bargaining Space")
library(tidyverse)
library(latex2exp)
path <- getwd() %>% strsplit("/")
lastPath <- path[[1]][length(path[[1]])]
if (lastPath == "figs") {
source("source.R")
source("params.R")
}
a1 <- a2 <- 0
tauStar1 <- optim(par=1, fn=G, tau_j=1, a=a1, sigma=sigma, alpha=alpha, L=L, method="Brent", lower=1, upper=100, control=list(fnscale=-1))$par
tauStar2 <- optim(par=1, fn=G, tau_j=1, a=a2, sigma=sigma, alpha=alpha, L=L, method="Brent", lower=1, upper=100, control=list(fnscale=-1))$par
pareto <- function(taus, a1, a2, sigma, n, alpha, L, lambda) {
return(-1*(lambda * G(taus[1], taus[2], a1, sigma, alpha, L) + (1 - lambda) * G(taus[2], taus[1], a2, sigma, alpha, L)))
}
pFrontier1 <- c()
pFrontier2 <- c()
lambdaV <- seq(0, 1, .01)
for (i in lambdaV) {
O <- optim(par=c(1,1), fn=pareto, a1=a1, a2=a2, sigma=sigma, alpha=alpha, L=L, lambda=i, lower=c(1,1), method="L-BFGS-B")
pFrontier1 <- c(pFrontier1, O$par[1])
pFrontier2 <- c(pFrontier2, O$par[2])
}
# indifference curves from trade war
iso <- function(tau_i, tau_j, a, sigma, alpha, L, tauStar_i, tauStar_j) {
return(abs(G(tau_i, tau_j, a, sigma, alpha, L) - G(tauStar_i, tauStar_j, a, sigma, alpha, L)))
}
G(tauStar1, tauStar2, a1, sigma, alpha, L)
iso1 <- c()
iso2 <- c()
for (i in pFrontier2) {
O <- optim(par=1, fn=iso, tau_j=i, a=a1, sigma=sigma, alpha=alpha, L=L, tauStar_i=tauStar1, tauStar_j=tauStar2, lower=1, upper=tauStar1, method="Brent")
iso1 <- c(iso1, O$par)
}
for (i in pFrontier1) {
O <- optim(par=1, fn=iso, tau_j=i, a=a2, sigma=sigma, alpha=alpha, L=L, tauStar_i=tauStar2, tauStar_j=tauStar1, lower=1, upper=tauStar2, method="Brent")
iso2 <- c(iso2, O$par)
}
pfData <- data.frame(pFrontier1, pFrontier2, iso1, iso2)
barPlot <- ggplot(pfData, aes(x=pFrontier1, y=pFrontier2)) +
geom_line(size=1.5) +
# geom_line(y=iso2, lty=2) +
# geom_line(aes(x=iso1, y=pFrontier2), lty=2) +
annotate("text", x=pFrontier1[length(pFrontier1)/2] + .1, y=pFrontier2[length(pFrontier2)/2],
label=TeX("$\\lambda G_i + (1 - \\lambda) G_j$"), family="Palatino", size=5) +
annotate("text", x=pFrontier1[length(pFrontier1)] - .04, y=pFrontier2[length(pFrontier2)] + .025,
label=TeX("$\\lambda = 1$"), family="Palatino", size=5) +
annotate("text", x=pFrontier1[1] + .04, y=pFrontier2[1] - .025,
label=TeX("$\\lambda = 0$"), family="Palatino", size=5) +
geom_vline(xintercept=max(pFrontier1), size=1) +
geom_hline(yintercept=max(pFrontier2), size=1) +
scale_x_continuous(expand = c(0, 0), breaks=c(1, tauStar1), labels=c(1, TeX("$\\tau_i^{*}(a_i)$"))) +
scale_y_continuous(expand = c(0, 0), breaks=c(1, tauStar2), labels=c(1, TeX("$\\tau_j^{*}(a_j)$"))) +
theme_classic() +
theme(text=element_text(family="Palatino"), axis.text=element_text(size=12),
axis.ticks=element_blank(), axis.title=element_blank(),
plot.margin=unit(c(.5,.5,.5,.5), "cm"), aspect.ratio=1) +
labs(title="Bargaining Space")
barPlot
library(tidyverse)
library(latex2exp)
path <- getwd() %>% strsplit("/")
lastPath <- path[[1]][length(path[[1]])]
if (lastPath == "figs") {
source("source.R")
source("params.R")
}
a1 <- a2 <- 1
tauStar1 <- optim(par=1, fn=G, tau_j=1, a=a1, sigma=sigma, alpha=alpha, L=L, method="Brent", lower=1, upper=100, control=list(fnscale=-1))$par
tauStar2 <- optim(par=1, fn=G, tau_j=1, a=a2, sigma=sigma, alpha=alpha, L=L, method="Brent", lower=1, upper=100, control=list(fnscale=-1))$par
pareto <- function(taus, a1, a2, sigma, n, alpha, L, lambda) {
return(-1*(lambda * G(taus[1], taus[2], a1, sigma, alpha, L) + (1 - lambda) * G(taus[2], taus[1], a2, sigma, alpha, L)))
}
pFrontier1 <- c()
pFrontier2 <- c()
lambdaV <- seq(0, 1, .01)
for (i in lambdaV) {
O <- optim(par=c(1,1), fn=pareto, a1=a1, a2=a2, sigma=sigma, alpha=alpha, L=L, lambda=i, lower=c(1,1), method="L-BFGS-B")
pFrontier1 <- c(pFrontier1, O$par[1])
pFrontier2 <- c(pFrontier2, O$par[2])
}
# indifference curves from trade war
iso <- function(tau_i, tau_j, a, sigma, alpha, L, tauStar_i, tauStar_j) {
return(abs(G(tau_i, tau_j, a, sigma, alpha, L) - G(tauStar_i, tauStar_j, a, sigma, alpha, L)))
}
G(tauStar1, tauStar2, a1, sigma, alpha, L)
iso1 <- c()
iso2 <- c()
for (i in pFrontier2) {
O <- optim(par=1, fn=iso, tau_j=i, a=a1, sigma=sigma, alpha=alpha, L=L, tauStar_i=tauStar1, tauStar_j=tauStar2, lower=1, upper=tauStar1, method="Brent")
iso1 <- c(iso1, O$par)
}
for (i in pFrontier1) {
O <- optim(par=1, fn=iso, tau_j=i, a=a2, sigma=sigma, alpha=alpha, L=L, tauStar_i=tauStar2, tauStar_j=tauStar1, lower=1, upper=tauStar2, method="Brent")
iso2 <- c(iso2, O$par)
}
pfData <- data.frame(pFrontier1, pFrontier2, iso1, iso2)
barPlot <- ggplot(pfData, aes(x=pFrontier1, y=pFrontier2)) +
geom_line(size=1.5) +
# geom_line(y=iso2, lty=2) +
# geom_line(aes(x=iso1, y=pFrontier2), lty=2) +
annotate("text", x=pFrontier1[length(pFrontier1)/2] + .1, y=pFrontier2[length(pFrontier2)/2],
label=TeX("$\\lambda G_i + (1 - \\lambda) G_j$"), family="Palatino", size=5) +
annotate("text", x=pFrontier1[length(pFrontier1)] - .04, y=pFrontier2[length(pFrontier2)] + .025,
label=TeX("$\\lambda = 1$"), family="Palatino", size=5) +
annotate("text", x=pFrontier1[1] + .04, y=pFrontier2[1] - .025,
label=TeX("$\\lambda = 0$"), family="Palatino", size=5) +
geom_vline(xintercept=max(pFrontier1), size=1) +
geom_hline(yintercept=max(pFrontier2), size=1) +
scale_x_continuous(expand = c(0, 0), breaks=c(1, tauStar1), labels=c(1, TeX("$\\tau_i^{*}(a_i)$"))) +
scale_y_continuous(expand = c(0, 0), breaks=c(1, tauStar2), labels=c(1, TeX("$\\tau_j^{*}(a_j)$"))) +
theme_classic() +
theme(text=element_text(family="Palatino"), axis.text=element_text(size=12),
axis.ticks=element_blank(), axis.title=element_blank(),
plot.margin=unit(c(.5,.5,.5,.5), "cm"), aspect.ratio=1) +
labs(title="Bargaining Space")
barPlot
library(tidyverse)
library(latex2exp)
path <- getwd() %>% strsplit("/")
lastPath <- path[[1]][length(path[[1]])]
if (lastPath == "figs") {
source("source.R")
source("params.R")
}
a1 <- a2 <- 10
tauStar1 <- optim(par=1, fn=G, tau_j=1, a=a1, sigma=sigma, alpha=alpha, L=L, method="Brent", lower=1, upper=100, control=list(fnscale=-1))$par
tauStar2 <- optim(par=1, fn=G, tau_j=1, a=a2, sigma=sigma, alpha=alpha, L=L, method="Brent", lower=1, upper=100, control=list(fnscale=-1))$par
pareto <- function(taus, a1, a2, sigma, n, alpha, L, lambda) {
return(-1*(lambda * G(taus[1], taus[2], a1, sigma, alpha, L) + (1 - lambda) * G(taus[2], taus[1], a2, sigma, alpha, L)))
}
pFrontier1 <- c()
pFrontier2 <- c()
lambdaV <- seq(0, 1, .01)
for (i in lambdaV) {
O <- optim(par=c(1,1), fn=pareto, a1=a1, a2=a2, sigma=sigma, alpha=alpha, L=L, lambda=i, lower=c(1,1), method="L-BFGS-B")
pFrontier1 <- c(pFrontier1, O$par[1])
pFrontier2 <- c(pFrontier2, O$par[2])
}
# indifference curves from trade war
iso <- function(tau_i, tau_j, a, sigma, alpha, L, tauStar_i, tauStar_j) {
return(abs(G(tau_i, tau_j, a, sigma, alpha, L) - G(tauStar_i, tauStar_j, a, sigma, alpha, L)))
}
G(tauStar1, tauStar2, a1, sigma, alpha, L)
iso1 <- c()
iso2 <- c()
for (i in pFrontier2) {
O <- optim(par=1, fn=iso, tau_j=i, a=a1, sigma=sigma, alpha=alpha, L=L, tauStar_i=tauStar1, tauStar_j=tauStar2, lower=1, upper=tauStar1, method="Brent")
iso1 <- c(iso1, O$par)
}
for (i in pFrontier1) {
O <- optim(par=1, fn=iso, tau_j=i, a=a2, sigma=sigma, alpha=alpha, L=L, tauStar_i=tauStar2, tauStar_j=tauStar1, lower=1, upper=tauStar2, method="Brent")
iso2 <- c(iso2, O$par)
}
pfData <- data.frame(pFrontier1, pFrontier2, iso1, iso2)
barPlot <- ggplot(pfData, aes(x=pFrontier1, y=pFrontier2)) +
geom_line(size=1.5) +
# geom_line(y=iso2, lty=2) +
# geom_line(aes(x=iso1, y=pFrontier2), lty=2) +
annotate("text", x=pFrontier1[length(pFrontier1)/2] + .1, y=pFrontier2[length(pFrontier2)/2],
label=TeX("$\\lambda G_i + (1 - \\lambda) G_j$"), family="Palatino", size=5) +
annotate("text", x=pFrontier1[length(pFrontier1)] - .04, y=pFrontier2[length(pFrontier2)] + .025,
label=TeX("$\\lambda = 1$"), family="Palatino", size=5) +
annotate("text", x=pFrontier1[1] + .04, y=pFrontier2[1] - .025,
label=TeX("$\\lambda = 0$"), family="Palatino", size=5) +
geom_vline(xintercept=max(pFrontier1), size=1) +
geom_hline(yintercept=max(pFrontier2), size=1) +
scale_x_continuous(expand = c(0, 0), breaks=c(1, tauStar1), labels=c(1, TeX("$\\tau_i^{*}(a_i)$"))) +
scale_y_continuous(expand = c(0, 0), breaks=c(1, tauStar2), labels=c(1, TeX("$\\tau_j^{*}(a_j)$"))) +
theme_classic() +
theme(text=element_text(family="Palatino"), axis.text=element_text(size=12),
axis.ticks=element_blank(), axis.title=element_blank(),
plot.margin=unit(c(.5,.5,.5,.5), "cm"), aspect.ratio=1) +
labs(title="Bargaining Space")
barPlot
pFrontier2
a1 <- a2 <- .5
tauStar1 <- optim(par=1, fn=G, tau_j=1, a=a1, sigma=sigma, alpha=alpha, L=L, method="Brent", lower=1, upper=100, control=list(fnscale=-1))$par
tauStar2 <- optim(par=1, fn=G, tau_j=1, a=a2, sigma=sigma, alpha=alpha, L=L, method="Brent", lower=1, upper=100, control=list(fnscale=-1))$par
pareto <- function(taus, a1, a2, sigma, n, alpha, L, lambda) {
return(-1*(lambda * G(taus[1], taus[2], a1, sigma, alpha, L) + (1 - lambda) * G(taus[2], taus[1], a2, sigma, alpha, L)))
}
pFrontier1 <- c()
pFrontier2 <- c()
lambdaV <- seq(0, 1, .01)
for (i in lambdaV) {
O <- optim(par=c(1,1), fn=pareto, a1=a1, a2=a2, sigma=sigma, alpha=alpha, L=L, lambda=i, lower=c(1,1), method="L-BFGS-B")
pFrontier1 <- c(pFrontier1, O$par[1])
pFrontier2 <- c(pFrontier2, O$par[2])
}
# indifference curves from trade war
iso <- function(tau_i, tau_j, a, sigma, alpha, L, tauStar_i, tauStar_j) {
return(abs(G(tau_i, tau_j, a, sigma, alpha, L) - G(tauStar_i, tauStar_j, a, sigma, alpha, L)))
}
G(tauStar1, tauStar2, a1, sigma, alpha, L)
iso1 <- c()
iso2 <- c()
for (i in pFrontier2) {
O <- optim(par=1, fn=iso, tau_j=i, a=a1, sigma=sigma, alpha=alpha, L=L, tauStar_i=tauStar1, tauStar_j=tauStar2, lower=1, upper=tauStar1, method="Brent")
iso1 <- c(iso1, O$par)
}
for (i in pFrontier1) {
O <- optim(par=1, fn=iso, tau_j=i, a=a2, sigma=sigma, alpha=alpha, L=L, tauStar_i=tauStar2, tauStar_j=tauStar1, lower=1, upper=tauStar2, method="Brent")
iso2 <- c(iso2, O$par)
}
pfData <- data.frame(pFrontier1, pFrontier2, iso1, iso2)
barPlot <- ggplot(pfData, aes(x=pFrontier1, y=pFrontier2)) +
geom_line(size=1.5) +
# geom_line(y=iso2, lty=2) +
# geom_line(aes(x=iso1, y=pFrontier2), lty=2) +
annotate("text", x=pFrontier1[length(pFrontier1)/2] + .1, y=pFrontier2[length(pFrontier2)/2],
label=TeX("$\\lambda G_i + (1 - \\lambda) G_j$"), family="Palatino", size=5) +
annotate("text", x=pFrontier1[length(pFrontier1)] - .04, y=pFrontier2[length(pFrontier2)] + .025,
label=TeX("$\\lambda = 1$"), family="Palatino", size=5) +
annotate("text", x=pFrontier1[1] + .04, y=pFrontier2[1] - .025,
label=TeX("$\\lambda = 0$"), family="Palatino", size=5) +
geom_vline(xintercept=max(pFrontier1), size=1) +
geom_hline(yintercept=max(pFrontier2), size=1) +
scale_x_continuous(expand = c(0, 0), breaks=c(1, tauStar1), labels=c(1, TeX("$\\tau_i^{*}(a_i)$"))) +
scale_y_continuous(expand = c(0, 0), breaks=c(1, tauStar2), labels=c(1, TeX("$\\tau_j^{*}(a_j)$"))) +
theme_classic() +
theme(text=element_text(family="Palatino"), axis.text=element_text(size=12),
axis.ticks=element_blank(), axis.title=element_blank(),
plot.margin=unit(c(.5,.5,.5,.5), "cm"), aspect.ratio=1) +
labs(title="Bargaining Space")
barPlot
G(tauStar1, tauStar2, a1, sigma, alpha, L)
tauStar2
tauStar1
a1 <- a2 <- 1
tauStar1 <- optim(par=1, fn=G, tau_j=1, a=a1, sigma=sigma, alpha=alpha, L=L, method="Brent", lower=1, upper=100, control=list(fnscale=-1))$par
tauStar2 <- optim(par=1, fn=G, tau_j=1, a=a2, sigma=sigma, alpha=alpha, L=L, method="Brent", lower=1, upper=100, control=list(fnscale=-1))$par
tauStar1
tauStar2
library(tidyverse)
library(latex2exp)
path <- getwd() %>% strsplit("/")
lastPath <- path[[1]][length(path[[1]])]
if (lastPath == "figs") {
source("source.R")
source("params.R")
}
a1 <- a2 <- 1
tauStar1 <- optim(par=1, fn=G, tau_j=1, a=a1, sigma=sigma, alpha=alpha, L=L, method="Brent", lower=1, upper=100, control=list(fnscale=-1))$par
tauStar2 <- optim(par=1, fn=G, tau_j=1, a=a2, sigma=sigma, alpha=alpha, L=L, method="Brent", lower=1, upper=100, control=list(fnscale=-1))$par
pareto <- function(taus, a1, a2, sigma, n, alpha, L, lambda) {
return(-1*(lambda * G(taus[1], taus[2], a1, sigma, alpha, L) + (1 - lambda) * G(taus[2], taus[1], a2, sigma, alpha, L)))
}
pFrontier1 <- c()
pFrontier2 <- c()
lambdaV <- seq(0, 1, .01)
for (i in lambdaV) {
O <- optim(par=c(1,1), fn=pareto, a1=a1, a2=a2, sigma=sigma, alpha=alpha, L=L, lambda=i, lower=c(1,1), method="L-BFGS-B")
pFrontier1 <- c(pFrontier1, O$par[1])
pFrontier2 <- c(pFrontier2, O$par[2])
}
pFrontier1
pFrontier2
